{
    "endpoints": [
        {
            "name": "MyVariant.info variant query service",
            "methods": [
                {
                    "MethodName": "Variant query service",
                    "Synopsis": "Make variant query and return matching variant list. Support JSONP and CORS as well.",
                    "HTTPMethod": "GET",
                    "URI": "/v1/query",
                    "RequiresOAuth": "N",
                    "parameters": [
                        {
                            "Name": "q",
                            "Type": "string",
                            "Required": "Y",
                            "Description": "query string. Examples: \"rs58991260\", \"chr1:69000-70000\", \"dbsnp.vartype:snp\". The detailed query syntax can be found at http://docs.myvariant.info/en/latest/doc/variant_query_service.html#query-syntax"
                        },
                        {
                            "Name": "fields",
                            "Type": "string",
                            "Description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/chr16:g.28883241A>G). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"dbnsfp\", \"dbnsfp.genename\", or \"dbnsfp.aa.*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
                        },
                        {
                            "Name": "size",
                            "Type": "integer",
                            "Description": " the maximum number of matching gene hits to return (with a cap of 1000 at the moment). Default: 10."
                        },
                        {
                            "Name": "from",
                            "Type": "integer",
                            "Description": " the number of matching gene hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default: 0. "
                        },
                        {
                            "Name": "sort",
                            "Type": "string",
                            "Description": "the comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order."
                        },
                        {
                            "Name": "facets",
                            "Type": "string",
                            "Description": "a single field or comma-separated fields to return facets, for example, â€œfacets=dbsnp.vartype."
                        },
                        {
                            "Name": "callback",
                            "Type": "string",
                            "Description": "you can pass a \"callback\" parameter to make a JSONP call."
                        },
                        {
                            "Name": "email",
                            "Type": "string",
                            "Description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you."
                        }
                    ]
                },

                {
                    "MethodName": "Variant query service via POST",
                    "Synopsis": "Make Variant queries in batch",
                    "HTTPMethod": "POST",
                    "URI": "/v1/query",
                    "RequiresOAuth": "N",
                    "parameters": [
                        {
                            "Name": "q",
                            "Type": "string",
                            "Required": "Y",
                            "Description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=rs58991260,rs2500\""
                        },
                        {
                            "Name": "scopes",
                            "Type": "string",
                            "Required": "Y",
                            "Description": "specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=dbsnp.rsid\", \"scopes=dbsnp.rsid,dbnsfp.genename\". The available \"fields\" can be passed to \"scopes\" parameter are listed here: <docs_url_here> (coming soon)."
                        },
                        {
                            "Name": "fields",
                            "Type": "string",
                            "Description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/chr16:g.28883241A>G). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"dbnsfp\", \"dbnsfp.genename\", or \"dbnsfp.aa.*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
                        },
                        {
                            "Name": "email",
                            "Type": "string",
                            "Description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you."
                        }
                    ]
                }
            ]
        },

        {
            "name": "MyVariant.info variant annotation services",
            "methods": [
                {
                    "MethodName": "Variant annotation service",
                    "Synopsis": "Retrieve variant annotation based on HGVS name based ids, support JSONP and CORS as well.",
                    "HTTPMethod": "GET",
                    "URI": "/v1/variant/:variantid",
                    "RequiresOAuth": "N",
                    "parameters": [
                        {
                            "Name": "variantid",
                            "Type": "string",
                            "Required": "Y",
                            "Description": "HGVS name based variant id, using genomic location based on hg19 human genome assembly, e.g. chr1:g.35367G>A, chr7:g.55241707G>T, chr16:g.28883241A>G"
                        },
                        {
                            "Name": "fields",
                            "Type": "string",
                            "Description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/chr16:g.28883241A>G). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"dbnsfp\", \"dbnsfp.genename\", or \"dbnsfp.aa.*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
                        },
                        {
                            "Name": "callback",
                            "Type": "string",
                            "Description": "you can pass a \"callback\" parameter to make a JSONP call."
                        },
                        {
                            "Name": "email",
                            "Type": "string",
                            "Description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you."
                        }
                    ]
                },

                {
                    "MethodName": "Variant annotation service via POST",
                    "Synopsis": "Make variant queries in batch for a list of HGVS name based ids",
                    "HTTPMethod": "POST",
                    "URI": "/v1/variant",
                    "RequiresOAuth": "N",
                    "parameters": [
                        {
                            "Name": "ids",
                            "Type": "string",
                            "Required": "Y",
                            "Description": "multiple variantids seperated by comma, e.g., \"ids=chr1:g.35367C>T,chr7:g.55241707G>T,chr16:g.28883241A>G\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted."
                        },
                        {
                            "Name": "fields",
                            "Type": "string",
                            "Description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/chr16:g.28883241A>G). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"dbnsfp\", \"dbnsfp.genename\", or \"dbnsfp.aa.*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
                        },
                        {
                            "Name": "email",
                            "Type": "string",
                            "Description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you."
                        }
                    ]
                }

            ]
        },

        {
            "name": "MyVariant.info metadata service",
            "methods": [
                {
                    "MethodName": "Metadata service",
                    "Synopsis": "Get metadata about the data available from MyVariant.info.",
                    "HTTPMethod": "GET",
                    "URI": "/v1/metadata",
                    "parameters": [
                        {
                            "Name": "callback",
                            "Type": "string",
                            "Description": "you can pass a \"callback\" parameter to make a JSONP call."
                        }
                    ]
                }
            ]
        }
    ]
}
